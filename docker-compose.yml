version: '3'
services:
  postgres:
    container_name: database
    image: postgres:15.2
    profiles: ["dev", "prod"]
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - ./script/init.sql:/docker-entrypoint-initdb.d/init.sql
  broker:
    image: confluentinc/cp-kafka:7.5.2
    hostname: broker
    container_name: broker
    profiles: ["dev", "prod"]
    ports:
      - "9092:9092"
      - "29092:29092"  # Expose another port for connections from the host machine
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092,HOST://localhost:29092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:29093,HOST://:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      CLUSTER_ID: 'your_unique_cluster_id'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.2
    hostname: schema-registry
    container_name: schema-registry
    profiles: ["dev", "prod"]
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"


  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.2
    hostname: control-center
    container_name: control-center
    profiles: ["dev", "prod"]
    depends_on:
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  order-service:
    container_name: Order-Service
    profiles: ["prod"]
    build:
      context: order-service
      dockerfile: Dockerfile
    image: order-service
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081

  payment-service:
    container_name: payment-service
    profiles: ["prod"]
    build:
      context: payment-service
      dockerfile: Dockerfile
    image: payment-service
    depends_on:
      - broker
      - schema-registry
    ports:
        - "8082:8082"
    environment:
        KAFKA_BOOTSTRAP_SERVERS: broker:9092
        SCHEMA_REGISTRY_URL: http://schema-registry:8081
        SPRING_DATASOURCE_PASSWORD: mypassword
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/paymentdb
        SPRING_DATASOURCE_USERNAME: myuser

  stock-service:
    container_name: stock-service
    profiles: [ "prod" ]
    build:
      context: stock-service
      dockerfile: Dockerfile
    image: stock-service
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/stockdb
      SPRING_DATASOURCE_USERNAME: myuser



